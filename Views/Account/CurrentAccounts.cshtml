@using GSCrm.Models.ViewModels
@using GSCrm.Data.ApplicationInfo
@using static GSCrm.CommonConsts
@inject ResManager resManager
@inject IViewsInfo viewsInfo
@model AccountsViewModel
@{
    ViewInfo currentAccountsView = viewsInfo.Get(CURRENT_ACCS);
    IEnumerable<AccountViewModel> accounts = Model.CurrentAccounts;
    int accountsCount = Model.AllAccounts.Count();
}
<div class="tab-pane fade show" id="currentAccounts" role="tabpanel" aria-labelledby="currentAccountsTab">
    @if (accountsCount > 0)
    {
        @* // Фильтр по клиентам *@
        await Html.RenderPartialAsync($"{ACC_VIEWS_REL_PATH}Partial/CurrentAccountsFilter.cshtml");
    }
    <form id="currentAccounts" class="table-wrapper">
        <table class="fl-table @(accountsCount > 0 ? "" : "empty-table")">
            <thead>
                @if (accountsCount > 0)
                {
                    <tr>
                        <th>@resManager.GetString("NameLabel")</th>
                        <th>@resManager.GetString("AccountType")</th>
                    </tr>
                }
                else { <tr><th></th><th></th></tr> }
            </thead>
            <tbody>
                @if (accountsCount == 0)
                {
                    <tr>
                        <td><img src="~/img/default-empty.svg" /></td>
                        <td>
                            <input type="button" class="btn btn-outline-dark" data-toggle="modal" data-target="#accountModal" value="@resManager.GetString("ESAccount")">
                        </td>
                    </tr>
                }
                @foreach (AccountViewModel account in accounts)
                {
                    <tr>
                        <td class="tooltip-cell-src tooltip-cell-link label-non-select account-item">
                            @Html.ActionLink(account.Name, "GetAccount", ACCOUNT, new
                            {
                                id = account.Id,
                                selectedAccountsTab = CURRENT_ACCS
                            })
                    </td>
                    @switch (account.AccountType)
                    {
                        case "Individual":
                            <td>@resManager.GetString("Individual")</td>
                            break;
                        case "IndividualEntrepreneur":
                            <td>@resManager.GetString("IE")</td>
                            break;
                        case "LegalEntity":
                            <td>@resManager.GetString("LE")</td>
                            break;
                    }
                </tr>
            }
            </tbody>
        </table>
    </form>
    @{
        await Html.RenderPartialAsync("Partial/Navigation", new NavbarRenderSettings
        {
            ItemsCount = accounts.Count(),
            ViewInfo = currentAccountsView,
            ControllerName = ACCOUNT,
            ActionName = CURRENT_ACCS
        });
    }
</div>
